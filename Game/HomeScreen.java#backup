package Game;
import Graphics.*;
import Graphics.Font;
import Entities.*;
import java.util.*;
import java.util.Random;
import java.awt.*;
import java.awt.event.KeyEvent;

/**
 * Write a description of class HomeScreen here.
 * 
 * @author (your name) 
 * @version (a version number or a date)
 */
public class HomeScreen extends Stage
{
    // instance variables - replace the example below with your own
    private int unhoveredColor = Colors.get(-1, 532, -1, -1);
    private int hoveredColor = Colors.get(-1, 543, -1, -1);
    private boolean play = false;
    int xTile = 9;
    int yTile = 0;
    double scale = 3;
    int playButtonX = 47;
    int playButtonY = 50;
    int highScoresButtonX = 200;
    int highScoresButtonY = 50;

    /**
     * Constructor for objects of class HomeScreen
     */
    public HomeScreen(Level level, Game game, Screen screen, InputHandler input)
    {
        super(level, game, screen, -1, null, input);
        input.setScreenType(0, null, this);
    }

    public void renderEntities(Screen screen)
    {
        int modifier = (int)(8 * scale);  
        String play = "Play";
        String highScores = "high scores";
        if(input.getMouseX() > playButtonX && input.getMouseX() < 90 + playButtonX && 
        input.getMouseY() > playButtonY && input.getMouseY() < 36 + playButtonY)
            renderPlayButton(screen, modifier, play, hoveredColor, 435);
        else
            renderPlayButton(screen, modifier, play, unhoveredColor, 424);
            
        if(input.getMouseX() > highScoresButtonX && input.getMouseX() < highScoresButtonX + 210 &&
        input.getMouseY() > highScoresButtonY && input.getMouseY() < highScoresButtonY + 36)
            renderHighScoresButton(screen, modifier, highScores, hoveredColor, 435);
        else
            renderHighScoresButton(screen, modifier, highScores, unhoveredColor, 424);
    }

    public void renderPlayButton(Screen screen, int modifier, String msg, int color, int fontColor)
    {
        screen.render(playButtonX, playButtonY, xTile + yTile * 32, color, false, false, scale);
        screen.render(playButtonX + modifier, playButtonY, (xTile + 1) + yTile * 32, color, false, false, scale);
        screen.render(playButtonX + modifier * 2, playButtonY, (xTile + 1) + yTile * 32, color, false, false, scale);
        screen.render(playButtonX + modifier * 3, playButtonY, (xTile + 2) + yTile * 32, color, false, false, scale);
        screen.render(playButtonX, playButtonY + modifier, xTile + (yTile + 1) * 32, color, false, false, scale);
        screen.render(playButtonX + modifier, playButtonY + modifier, (xTile + 1) + (yTile + 1) * 32, color, false, false, scale);
        screen.render(playButtonX + modifier * 2, playButtonY + modifier, (xTile + 1) + (yTile + 1) * 32, color, false, false, scale);
        screen.render(playButtonX + modifier * 3, playButtonY + modifier, (xTile + 2) + (yTile + 1) * 32, color, false, false, scale);
        
        Font.render(msg, screen, playButtonX+ 12, playButtonY + 11, Colors.get(-1, -1, -1, fontColor), 2); 
    }
    
    public void renderHighScoresButton(Screen screen, int modifier, String msg, int color, int fontColor)
    {
        int width = 8;
        screen.render(highScoresButtonX, highScoresButtonY, xTile + yTile * 32, color, false, false, scale);
        for(int i = 1; i < width; i++)
        {
           screen.render(highScoresButtonX + modifier * i, highScoresButtonY, (xTile + 1) + yTile * 32, color, false, false, scale);
        }
        screen.render(highScoresButtonX + modifier * width, highScoresButtonY, (xTile + 2) + yTile * 32, color, false, false, scale);
        
        screen.render(highScoresButtonX, highScoresButtonY + modifier, xTile + (yTile + 1) * 32, color, false, false, scale);
        for(int i = 1; i < width; i++)
        {
            screen.render(highScoresButtonX + modifier * i, highScoresButtonY + modifier, (xTile + 1) + (yTile + 1) * 32, color, false, false, scale);
        }
        screen.render(highScoresButtonX + modifier * width, highScoresButtonY + modifier, (xTile + 2) + (yTile + 1) * 32, color, false, false, scale);
        
        Font.render(msg, screen, highScoresButtonX + 12, highScoresButtonY + 11, Colors.get(-1, -1, -1, fontColor), 2); 
    }

    public boolean choosingWhatToDo()
    {
        return !play;
    }

    public void play()
    {
        if(input.getMouseX() > playButtonX && input.getMouseX() < 90 + playButtonX && 
        input.getMouseY() > playButtonY && input.getMouseY() < 36 + playButtonY)
            play = true;
    }

    public boolean isHomeScreen()
    {
        return true;
    }
}
