#BlueJ class context
comment0.params=imagePath
comment0.target=Level(java.lang.String)
comment0.text=\r\n\ Created\ a\ level\ from\ an\ imagePath\ or\ creates\ a\ default\ level\ if\ \r\n\ the\ imagePath\ is\ null\r\n
comment1.params=
comment1.target=void\ loadLevelFromFile()
comment1.text=\r\n\ Loads\ a\ level\ from\ a\ given\ file.\ We\ use\ .png\ files\ only.\r\n
comment10.params=
comment10.target=int\ playerZombieCollision()
comment10.text=\r\n\ Returns\ the\ number\ of\ playeries\ that\ are\ touching\ the\ player\ at\ any\ given\ time.\ \r\n\ The\ more\ playeries\ on\ the\ player,\ the\ more\ health\ the\ player\ loses.\r\n
comment11.params=
comment11.target=java.util.List\ getMainPlayers()
comment11.text=\r\n\ Returns\ the\ main\ player\ of\ the\ game.\r\n
comment12.params=
comment12.target=Entities.Player\ getMainPlayer()
comment13.params=x\ y
comment13.target=Tile\ getTile(int,\ int)
comment13.text=\r\n\ Returns\ the\ tile\ at\ a\ passed\ in\ x\ and\ y\ coordinate.\r\n
comment14.params=index
comment14.target=void\ removeBullet(int)
comment15.params=entity
comment15.target=void\ addEntity(Entities.Entity)
comment15.text=\r\n\ Adds\ an\ entity\ to\ the\ arraylist\ of\ entities.\r\n
comment16.params=p
comment16.target=void\ addPlayer(Entities.Player)
comment17.params=b
comment17.target=void\ addBullet(Entities.Bullet)
comment18.params=
comment18.target=void\ reset()
comment18.text=\r\n\ Resets\ the\ arrayList\ of\ entities\ so\ only\ the\ player\ is\ remaining.\r\n\ This\ essentially\ resets\ the\ level.\ \r\n
comment19.params=
comment19.target=void\ addPowerUp()
comment2.params=
comment2.target=void\ loadTiles()
comment2.text=\r\n\ Loads\ the\ level\ using\ our\ tiles.\ Every\ color\ of\ pixel\ in\ the\ level\ file\ has\r\n\ a\ specific\ tile\ that\ we\ use\ and\ set\ in\ the\ tile\ classes\ (getID()).\ \r\n
comment20.params=
comment20.target=void\ removePowerUp()
comment21.params=
comment21.target=void\ addAmmoCrate()
comment22.params=index
comment22.target=void\ removeAmmoCrate(int)
comment23.params=
comment23.target=void\ emptyEntities()
comment3.params=
comment3.target=void\ saveLevelToFile()
comment3.text=\r\n\ Saves\ a\ level\ to\ a\ file.\r\n
comment4.params=x\ y\ newTile
comment4.target=void\ alterTile(int,\ int,\ Tile)
comment4.text=\r\n\ This\ changes\ a\ certain\ tile\ in\ the\ level.\ Shouldn't\ need\r\n\ to\ use\ this\ if\ levels\ are\ created\ correctly.\r\n
comment5.params=
comment5.target=void\ generateLevel()
comment5.text=\r\n\ Generates\ a\ random\ level.\ Only\ used\ if\ the\ level\ imagePath\r\n\ is\ null.\ \r\n
comment6.params=
comment6.target=void\ tick()
comment6.text=\r\n\ Calls\ the\ tick\ for\ every\ entity\ in\ the\ level.\ This\ is\ how\ \r\n\ all\ of\ the\ entities\ are\ synchronized.\ It\ checks\ for\ canRender\ almost\ \r\n\ constantly\ to\ avoid\ ConcurrentModificationErrors.\ I\ was\ getting\ a\ stackOverflow\r\n\ once\ every\ couple\ games\ and\ it\ was\ frustrating\ so\ I\ did\ a\ rudimentary\ sync.\r\n
comment7.params=screen\ g
comment7.target=void\ renderEntities(Graphics.Screen,\ java.awt.Graphics)
comment7.text=\r\n\ Renders\ all\ of\ the\ entities\ and\ then\ renders\ the\ player\ last.\r\n\ Rendering\ the\ player\ last\ puts\ the\ player\ on\ top\ of\ everything.\r\n
comment8.params=screen\ xOffset\ yOffset
comment8.target=void\ renderTiles(Graphics.Screen,\ int,\ int)
comment8.text=\r\n\ Renders\ all\ of\ the\ tiles\ in\ the\ level\ to\ the\ screen\ and\ \r\n\ set\ the\ x\ and\ yOffset.\ Offsets\ are\ used\ when\ the\ screen\ that\ we\ see\r\n\ isn't\ large\ enough\ for\ the\ level\ that\ is\ created.\ \r\n
comment9.params=player
comment9.target=Entities.Bullet\ getBullet(Entities.Player)
comment9.text=\r\n\ Returns\ a\ bullet\ at\ the\ passed\ in\ x\ and\ y.\ Returns\ null\ if\ there\ is\ no\ \r\n\ bullet\ at\ those\ coordinates.\ This\ is\ used\ later\ for\ hit\ detection.\r\n
numComments=24
